<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>subst manual page - Tcl Built-In Commands</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.11/Tk8.6.11 Documentation</a> <small>&gt;</small> <a href="contents.htm">Tcl Commands</a> <small>&gt;</small> subst</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../SqliteCmd/contents.htm">SQLite3 Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../TdbcsqliteCmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../TkLib/contents.htm">Tk C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<H3><A NAME="M2">NAME</A></H3>
subst &mdash; Perform backslash, command, and variable substitutions
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>subst </B>?<B>-nobackslashes</B>? ?<B>-nocommands</B>? ?<B>-novariables</B>? <I>string</I><BR>
<H3><A NAME="M4">DESCRIPTION</A></H3>
This command performs variable substitutions, command substitutions,
and backslash substitutions on its <I>string</I> argument and
returns the fully-substituted result.
The substitutions are performed in exactly the same way as for
Tcl commands.
As a result, the <I>string</I> argument is actually substituted twice,
once by the Tcl parser in the usual fashion for Tcl commands, and
again by the <I>subst</I> command.
<P>
If any of the <B>-nobackslashes</B>, <B>-nocommands</B>, or
<B>-novariables</B> are specified, then the corresponding substitutions
are not performed.
For example, if <B>-nocommands</B> is specified, command substitution
is not performed:  open and close brackets are treated as ordinary characters
with no special interpretation.
<P>
Note that the substitution of one kind can include substitution of
other kinds.  For example, even when the <B>-novariables</B> option
is specified, command substitution is performed without restriction.
This means that any variable substitution necessary to complete the
command substitution will still take place.  Likewise, any command
substitution necessary to complete a variable substitution will
take place, even when <B>-nocommands</B> is specified.  See the
<B><A HREF="#M5">EXAMPLES</A></B> below.
<P>
If an error occurs during substitution, then <B>subst</B> will return
that error.  If a break exception occurs during command or variable
substitution, the result of the whole substitution will be the
string (as substituted) up to the start of the substitution that
raised the exception.  If a continue exception occurs during the
evaluation of a command or variable substitution, an empty string
will be substituted for that entire command or variable substitution
(as long as it is well-formed Tcl.)  If a return exception occurs,
or any other return code is returned during command or variable
substitution, then the returned value is substituted for that
substitution.  See the <B><A HREF="#M5">EXAMPLES</A></B> below.  In this way, all exceptional
return codes are
&ldquo;caught&rdquo;
by <B>subst</B>.  The <B>subst</B> command
itself will either return an error, or will complete successfully.
<H3><A NAME="M5">EXAMPLES</A></H3>
When it performs its substitutions, <I>subst</I> does not give any
special treatment to double quotes or curly braces (except within
command substitutions) so the script
<P>
<PRE>set a 44
<B>subst</B> {xyz {$a}}</PRE>
<P>
returns
&ldquo;<B>xyz {44}</B>&rdquo;,
not
&ldquo;<B>xyz {$a}</B>&rdquo;
and the script
<P>
<PRE>set a &quot;p&#92;} q &#92;{r&quot;
<B>subst</B> {xyz {$a}}</PRE>
<P>
returns
&ldquo;<B>xyz {p} q {r}</B>&rdquo;,
not
&ldquo;<B>xyz {p&#92;} q &#92;{r}</B>&rdquo;.
<P>
When command substitution is performed, it includes any variable
substitution necessary to evaluate the script.
<P>
<PRE>set a 44
<B>subst</B> -novariables {$a [format $a]}</PRE>
<P>
returns
&ldquo;<B>$a 44</B>&rdquo;,
not
&ldquo;<B>$a $a</B>&rdquo;.
Similarly, when
variable substitution is performed, it includes any command
substitution necessary to retrieve the value of the variable.
<P>
<PRE>proc b {} {return c}
array set a {c c [b] tricky}
<B>subst</B> -nocommands {[b] $a([b])}</PRE>
<P>
returns
&ldquo;<B>[b] c</B>&rdquo;,
not
&ldquo;<B>[b] tricky</B>&rdquo;.
<P>
The continue and break exceptions allow command substitutions to
prevent substitution of the rest of the command substitution and the
rest of <I>string</I> respectively, giving script authors more options
when processing text using <I>subst</I>.  For example, the script
<P>
<PRE><B>subst</B> {abc,[break],def}</PRE>
<P>
returns
&ldquo;<B>abc,</B>&rdquo;,
not
&ldquo;<B>abc,,def</B>&rdquo;
and the script
<P>
<PRE><B>subst</B> {abc,[continue;expr {1+2}],def}</PRE>
<P>
returns
&ldquo;<B>abc,,def</B>&rdquo;,
not
&ldquo;<B>abc,3,def</B>&rdquo;.
<P>
Other exceptional return codes substitute the returned value
<P>
<PRE><B>subst</B> {abc,[return foo;expr {1+2}],def}</PRE>
<P>
returns
&ldquo;<B>abc,foo,def</B>&rdquo;,
not
&ldquo;<B>abc,3,def</B>&rdquo;
and
<P>
<PRE><B>subst</B> {abc,[return -code 10 foo;expr {1+2}],def}</PRE>
<P>
also returns
&ldquo;<B>abc,foo,def</B>&rdquo;,
not
&ldquo;<B>abc,3,def</B>&rdquo;.
<H3><A NAME="M6">SEE ALSO</A></H3>
<B><A HREF="../TclCmd/Tcl.htm">Tcl</A></B>, <B><A HREF="../TclCmd/eval.htm">eval</A></B>, <B><A HREF="../TclCmd/break.htm">break</A></B>, <B><A HREF="../TclCmd/continue.htm">continue</A></B>
<H3><A NAME="M7">KEYWORDS</A></H3>
<A href="../Keywords/B.htm#backslash substitution">backslash substitution</A>, <A href="../Keywords/C.htm#command substitution">command substitution</A>, <A href="../Keywords/Q.htm#quoting">quoting</A>, <A href="../Keywords/S.htm#substitution">substitution</A>, <A href="../Keywords/V.htm#variable substitution">variable substitution</A>
<div class="copy">Copyright &copy; 1994 The Regents of the University of California.
<BR>Copyright &copy; 1994-1996 Sun Microsystems, Inc.
<BR>Copyright &copy; 2001 Donal K. Fellows
</div>
</BODY></HTML>
