'\" t
.TH "SD_EVENT_SOURCE_SET_DESCRIPTION" "3" "" "systemd 248" "sd_event_source_set_description"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sd_event_source_set_description, sd_event_source_get_description \- Set or retrieve descriptive names of event sources
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <systemd/sd\-event\&.h>
.fi
.ft
.HP \w'int\ sd_event_source_set_description('u
.BI "int sd_event_source_set_description(sd_event_source\ *" "source" ", const\ char\ *" "description" ");"
.HP \w'int\ sd_event_source_get_description('u
.BI "int sd_event_source_get_description(sd_event_source\ *" "source" ", const\ char\ **" "description" ");"
.SH "DESCRIPTION"
.PP
\fBsd_event_source_set_description()\fR
may be used to set an arbitrary descriptive name for the event source object specified as
\fIsource\fR\&. This name will be used in debugging messages generated by
\fBsd-event\fR(3)
for this event source, and may be queried using
\fBsd_event_source_get_description()\fR
for debugging purposes\&. The
\fIdescription\fR
parameter shall point to a
\fBNUL\fR\-terminated string or be
\fBNULL\fR\&. In the latter case, the descriptive name will be unset\&. The string is copied internally, hence the
\fIdescription\fR
argument is not referenced after the function returns\&.
.PP
\fBsd_event_source_get_description()\fR
may be used to query the current descriptive name assigned to the event source object
\fIsource\fR\&. It returns a pointer to the current name in
\fIdescription\fR, stored in memory internal to the event source\&. The memory is invalidated when the event source is destroyed or the descriptive name is changed\&.
.PP
Event source objects generally have no description set when they are created, except for UNIX signal event sources created with
\fBsd_event_add_signal\fR(3), whose descriptive name is initialized to the signal\*(Aqs C constant name (e\&.g\&.
"SIGINT"
or
"SIGTERM")\&.
.SH "RETURN VALUE"
.PP
On success,
\fBsd_event_source_set_description()\fR
and
\fBsd_event_source_get_description()\fR
return a non\-negative integer\&. On failure, they return a negative errno\-style error code\&.
.SS "Errors"
.PP
Returned errors may indicate the following problems:
.PP
\fB\-EINVAL\fR
.RS 4
\fIsource\fR
is not a valid pointer to an
sd_event_source
object or the
\fIdescription\fR
argument for
\fBsd_event_source_get_description()\fR
is
\fBNULL\fR\&.
.RE
.PP
\fB\-ENOMEM\fR
.RS 4
Not enough memory to copy the name\&.
.RE
.PP
\fB\-ECHILD\fR
.RS 4
The event loop has been created in a different process\&.
.RE
.PP
\fB\-ENXIO\fR
.RS 4
No name was set for the event source\&.
.RE
.SH "NOTES"
.PP
These APIs are implemented as a shared library, which can be compiled and linked to with the
\fBlibsystemd\fR\ \&\fBpkg-config\fR(1)
file\&.
.SH "SEE ALSO"
.PP
\fBsd-event\fR(3),
\fBsd_event_add_io\fR(3),
\fBsd_event_add_time\fR(3),
\fBsd_event_add_signal\fR(3),
\fBsd_event_add_child\fR(3),
\fBsd_event_add_inotify\fR(3),
\fBsd_event_add_defer\fR(3),
\fBsd_event_source_set_userdata\fR(3)
