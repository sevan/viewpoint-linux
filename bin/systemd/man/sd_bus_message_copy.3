'\" t
.TH "SD_BUS_MESSAGE_COPY" "3" "" "systemd 248" "sd_bus_message_copy"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sd_bus_message_copy \- Copy the contents of one message to another
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <systemd/sd\-bus\&.h>
.fi
.ft
.HP \w'int\ sd_bus_message_copy('u
.BI "int sd_bus_message_copy(sd_bus_message\ *" "m" ", sd_bus_message\ *" "source" ", int\ " "all" ");"
.SH "DESCRIPTION"
.PP
\fBsd_bus_message_copy()\fR
copies the contents from message
\fIsource\fR
to
\fIm\fR\&. If
\fIall\fR
is false, a single complete type is copied (basic or container)\&. If
\fIall\fR
is true, the contents are copied until the end of the currently open container or the end of
\fIsource\fR\&.
.SH "RETURN VALUE"
.PP
On success, this call returns true if anything was copied, and false if there was nothing to copy\&. On failure, it returns a negative errno\-style error code\&.
.SS "Errors"
.PP
Returned errors may indicate the following problems:
.PP
\fB\-EINVAL\fR
.RS 4
\fIsource\fR
or
\fIm\fR
are
\fBNULL\fR\&.
.RE
.PP
\fB\-EPERM\fR
.RS 4
Message
\fIm\fR
has been sealed or
\fIsource\fR
has
\fInot\fR
been sealed\&.
.RE
.PP
\fB\-ESTALE\fR
.RS 4
Destination message is in invalid state\&.
.RE
.PP
\fB\-ENXIO\fR
.RS 4
Destination message cannot be appended to\&.
.RE
.PP
\fB\-ENOMEM\fR
.RS 4
Memory allocation failed\&.
.RE
.SH "NOTES"
.PP
These APIs are implemented as a shared library, which can be compiled and linked to with the
\fBlibsystemd\fR\ \&\fBpkg-config\fR(1)
file\&.
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsd-bus\fR(3),
\fBsd_bus_message_append\fR(3)
