'\" t
.TH "SYSTEMD\&.SLICE" "5" "" "systemd 248" "systemd.slice"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.slice \- Slice unit configuration
.SH "SYNOPSIS"
.PP
\fIslice\fR\&.slice
.SH "DESCRIPTION"
.PP
A unit configuration file whose name ends in
"\&.slice"
encodes information about a slice unit\&. A slice unit is a concept for hierarchically managing resources of a group of processes\&. This management is performed by creating a node in the Linux Control Group (cgroup) tree\&. Units that manage processes (primarily scope and service units) may be assigned to a specific slice\&. For each slice, certain resource limits may be set that apply to all processes of all units contained in that slice\&. Slices are organized hierarchically in a tree\&. The name of the slice encodes the location in the tree\&. The name consists of a dash\-separated series of names, which describes the path to the slice from the root slice\&. The root slice is named
\-\&.slice\&. Example:
foo\-bar\&.slice
is a slice that is located within
foo\&.slice, which in turn is located in the root slice
\-\&.slice\&.
.PP
Note that slice units cannot be templated, nor is possible to add multiple names to a slice unit by creating additional symlinks to its unit file\&.
.PP
By default, service and scope units are placed in
system\&.slice, virtual machines and containers registered with
\fBsystemd-machined\fR(8)
are found in
machine\&.slice, and user sessions handled by
\fBsystemd-logind\fR(8)
in
user\&.slice\&. See
\fBsystemd.special\fR(7)
for more information\&.
.PP
See
\fBsystemd.unit\fR(5)
for the common options of all unit configuration files\&. The common configuration items are configured in the generic [Unit] and [Install] sections\&. The slice specific configuration options are configured in the [Slice] section\&. Currently, only generic resource control settings as described in
\fBsystemd.resource-control\fR(5)
are allowed\&.
.PP
See the
\m[blue]\fBNew Control Group Interfaces\fR\m[]\&\s-2\u[1]\d\s+2
for an introduction on how to make use of slice units from programs\&.
.SH "AUTOMATIC DEPENDENCIES"
.SS "Implicit Dependencies"
.PP
The following dependencies are implicitly added:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Slice units automatically gain dependencies of type
\fIAfter=\fR
and
\fIRequires=\fR
on their immediate parent slice unit\&.
.RE
.SS "Default Dependencies"
.PP
The following dependencies are added unless
\fIDefaultDependencies=no\fR
is set:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Slice units will automatically have dependencies of type
\fIConflicts=\fR
and
\fIBefore=\fR
on
shutdown\&.target\&. These ensure that slice units are removed prior to system shutdown\&. Only slice units involved with late system shutdown should disable
\fIDefaultDependencies=\fR
option\&.
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd.unit\fR(5),
\fBsystemd.resource-control\fR(5),
\fBsystemd.service\fR(5),
\fBsystemd.scope\fR(5),
\fBsystemd.special\fR(7),
\fBsystemd.directives\fR(7)
.SH "NOTES"
.IP " 1." 4
New Control Group Interfaces
.RS 4
\%https://www.freedesktop.org/wiki/Software/systemd/ControlGroupInterface/
.RE
