'\" t
.TH "SD_BUS_MESSAGE_VERIFY_TYPE" "3" "" "systemd 248" "sd_bus_message_verify_type"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sd_bus_message_verify_type \- Check if the message has specified type at the current location
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <systemd/sd\-bus\&.h>
.fi
.ft
.HP \w'int\ sd_bus_message_verify_type('u
.BI "int sd_bus_message_verify_type(sd_bus_message\ *" "m" ", char\ " "type" ", const\ char*\ " "contents" ");"
.SH "DESCRIPTION"
.PP
\fBsd_bus_message_verify_type()\fR
checks if the complete type at the current location in the message
\fIm\fR
matches the specified
\fItype\fR
and
\fIcontents\fR\&. If non\-zero, parameter
\fItype\fR
must be one of the types specified in
\fBsd_bus_message_append\fR(1)\&. If non\-null, parameter
\fIcontents\fR
must be a valid sequence of complete types\&. If both
\fItype\fR
and
\fIcontents\fR
are specified
\fItype\fR
must be a container type\&.
.PP
If
\fItype\fR
is specified, the type in the message must match\&. If
\fIcontents\fR
is specified, the type in the message must be a container type with this signature\&.
.SH "RETURN VALUE"
.PP
On success, this call returns true if the type matches and zero if not (the message
\fIm\fR
contains different data or the end of the message has been reached)\&. On failure, it returns a negative errno\-style error code\&.
.SS "Errors"
.PP
Returned errors may indicate the following problems:
.PP
\fB\-EINVAL\fR
.RS 4
\fIm\fR
or both
\fItype\fR
and
\fIcontents\fR
are
\fBNULL\fR\&.
.sp
Arguments do not satisfy other constraints listed above\&.
.RE
.PP
\fB\-EPERM\fR
.RS 4
Message
\fIm\fR
is not sealed\&.
.RE
.SH "NOTES"
.PP
These APIs are implemented as a shared library, which can be compiled and linked to with the
\fBlibsystemd\fR\ \&\fBpkg-config\fR(1)
file\&.
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsd-bus\fR(3),
\fBsd_bus_message_append\fR(3)
