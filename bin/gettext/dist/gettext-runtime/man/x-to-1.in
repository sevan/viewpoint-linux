#! /bin/sh
#
# Copyright (C) 2001-2020 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# This program creates a program's manual from the .x skeleton and its --help
# output.
#
# Usage: x-to-1 [OPTIONS] PERL HELP2MAN EXECUTABLE PROGRAM.x PROGRAM.1
# where
#
#   PERL        The file name of the perl program.
#   HELP2MAN    Either the file name of the help2man perl script, or a complete
#               command such as "$PERL -w -- help2man".
#   EXECUTABLE  The file name of the program to invoke with --help.
#   PROGRAM     The name of the program.
#   PROGRAM.x   The .x skeleton is a file containing manual page text that is
#               not part of the --help output. It is passed to help2man via
#               its --include option. Its format is described in the help2man
#               documentation.
#   PROGRAM.1   The output file, a manual page in mandoc format.
#
# Options:
#   --update    Don't overwrite the output if nothing would change.


update=
while true; do
  case "$1" in
    --update) update=yes; shift;;
    *) break;;
  esac
done

if test $# != 5; then
  echo "Usage: x-to-1 [OPTIONS] PERL HELP2MAN executable program.x program.1" 1>&2
  exit 1
fi
PERL="$1"
HELP2MAN="$2"
executable="$3"
aux="$4"
output="$5"

# Accommodate both possible forms of the HELP2MAN argument.
case "$HELP2MAN" in
  "$PERL "*) ;;
  *) HELP2MAN="$PERL $HELP2MAN" ;;
esac

progname=`basename $aux .x`
# configure determined whether perl exists.
case "$PERL" in
  *"/missing perl")
    perlok=no
    ;;
  *)
    # Determine whether all the perl modules that help2man needs are installed.
    if $HELP2MAN --help >/dev/null 2>/dev/null; then
      perlok=yes
    else
      perlok=no
    fi
    ;;
esac
if test @CROSS_COMPILING@ = no && test -f $executable && test $perlok = yes; then
  echo "Updating man page $output"
  echo "$HELP2MAN --include=$aux $executable > $output"
  rm -f t-$progname.1
  $HELP2MAN --include=$aux $executable > t-$progname.1 || exit 1
  if test -n "$update"; then
    # In --update mode, don't overwrite the output if nothing would change.
    if cmp t-$progname.1 $output >/dev/null 2>&1; then
      rm -f t-$progname.1
    else
      mv t-$progname.1 $output
    fi
  else
    mv t-$progname.1 $output
  fi
else
  echo "WARNING: The man page $output cannot be updated yet."
fi
